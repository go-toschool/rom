Template of state
{% func Epic() %}

import {of, empty, from} from 'rxjs'
import {mergeMap, catchError, map} from 'rxjs/operators'
import {combineEpics, ofType} from 'redux-observable'

import {
  LOGIN,
  loginSuccess,
  loginFailure,
// --epic-dependencies--
} from './login.state'

const loginEpic = (action$, state$) => {
	return action$.pipe(
		ofType(LOGIN),
		mergeMap(action => {
      const {data} = action
    
      return from(fetch('http://www.gotoschool.com/api/example'))
        .pipe(
          map((response) => loginSuccess(response)),
          catchError((error) => of(
            loginFailure(error.message)
          )),
        )
    }
  )
}
// --epic-async--

export default combineEpics(
  loginEpic,
// --end-epic-combine--
)

{% endfunc %}
